name: Update Dictionary on GitHub Pages

on:
  push:
    branches:
      - main # Trigger when you push to the main branch
  schedule:
    # Runs daily at 7:05 AM UTC (11:05 PM PST)
    - cron: '20 7 * * *'
  workflow_dispatch: {} # Allows manual triggering from the GitHub Actions UI

jobs:
  update_dictionary:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Generate dictionary.json
      run: |
        set -x # This command prints each command before it's executed, very useful for debugging!
        mkdir -p pokeking-translator
        # *** ADD -L HERE ***
        curl -L -o dictionary.json "https://script.google.com/macros/s/AKfycbxCamQitK4Jrl2FG4l2oMNhK0orW1I3mtrTvMRoV7JHgc8fQTSoOuiG6Q1D5L-UybfM/exec"
        
        echo "--- Content of downloaded dictionary.json ---"
        cat dictionary.json
        echo "---------------------------------------------"

    - name: Commit and push changes
      run: |
        set -x # Enable verbose logging for this step
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        # Ensure consistent line endings before checking for diffs
        # This will convert the file to LF if it's CRLF, making Git happy
        # And it will also ensure Git considers it binary-safe for diffing if needed
        # (though JSON is text, sometimes tools add BOM or other subtle things)
        unix2dos dictionary.json || true # Try converting to CRLF just in case
        dos2unix dictionary.json || true # Convert to LF (standard for Unix)
        
        echo "--- Git Status before diff check ---"
        git status
        echo "------------------------------------"

        echo "--- Detailed Git Diff (dictionary.json vs HEAD) ---"
        # Compare the working directory file against the version in HEAD,
        # specifically showing differences including whitespace if applicable
        git diff --ignore-space-at-eol -- dictionary.json
        echo "-------------------------------------------------------------------"

        # IMPORTANT: Now, let's use a more robust way to check for changes that Git can see.
        # git diff-files --quiet: Compares working tree to index (staged changes)
        # git diff-index --quiet HEAD --: Compares index to HEAD (committed changes)
        # We need to add the file first to the index, then compare
        
        # Add the file to the staging area (index) to ensure Git's internal tracking is updated
        git add dictionary.json

        echo "--- Git Status after git add ---"
        git status
        echo "----------------------------------"

        # Now, check if the *staged* changes are different from HEAD
        # This should correctly detect content differences including line endings after `git add`
        if git diff-index --quiet HEAD --; then
          echo "No changes detected in dictionary.json (after staging). Skipping commit."
        else
          echo "Changes detected in dictionary.json (after staging). Committing and pushing..."
          git commit -m "Automated dictionary update"
          git push
        fi
